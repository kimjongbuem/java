1강 네트워크의 기본 개념

(FIRST 네트웤 기초용어)
네트워크 : 전송매체를 매개로 서로 연결되어 데이터를 교환하는 시스템의 모음임.
인터페이스 : 시스템과 전송 매체의 연결 지점에 대한 규격 (여러 의미가 많다 ㅎㅎ).
프로토콜 : 시스템이 데이터를 교환할 때는 임의의 통신 규칙	
	Data
Sender ---------> Recevier (protocol 준수)

흔히 사용하는 인터넷은 IP(internet protocol)라는 네트워크 프로토콜을 사용하는 네트워크의 집합체 

<1>네트워크 구성요소 
	1) 시스템 (System) 
	내부 규칙에 따라 능동적으로 동작하는 대상이다.	
	2) 인터페이스
	시스템과 시스템을 연결하기 위한 표준화 된 접근방식.
	3) 전송매체
	데이터를 전송하기 위한 물리적인 전송수단임.
	4) 프로토콜
	시스템이 데이터를 교환할 때는 임의의 통신 규칙
	주종관계가 아닌 동등한 위치에 있는 시스템 사이의 규칙이라는 점이 더 강조 인터페이스와 구분. 인터페이스는 두 시스템이 연동하기 위한 특정한 접촉지점을 의미하는 경우가 많지만,
	프로토콜은 주고받는 정보의 형식과 그 과정에서 발생하는 일련의 절차적 순서에 무게를 둠.
	5) 네트워크
	통신하는 시스템의 모음 단위 통칭
	동일 프로토콜을 이용해 서로 데이터를 주고받음 // 소규모->중 대규모 네트워크 구성 시 네트워크 끼리 라우터라는 중개장비를 사용해서 연결한다.
	6) 인터넷
	전 세계의 모든 네트워크가 유기적으로 연결되어 동착하는 통합 네트워크
	7) 표준화
	서로 다른 시스템이 상호 연동해 동작하려면 표준화라는 연동형식의 통일이 필요

<2> 시스템 기초용어
	1) 노드 : 데이터를 주고 받을 수 있는 모든 시스템을 통칭.
	2) 호스트 : 컴퓨터 기능이 있는 시스템. 
	1,2는 망구조에 주로 쓰임( 무슨무슨 망)

	호스트의 세분화 (서로 클라이언트도 될 수있고 서버가 될 수도 있다)
	3) 클라이언트 : 서비스를 이용하는 시스템임. 
	4) 서버 : 클라이언트에게 임의의 서비스를 제공하는 시스템

(SECOND 네트워크 기능)

국제 표준화 단체 ISO는 7계층모델을 쓴다. (공부는 5계층으로 할게요..)
모듈화개념을 쓰는데 모듈화는 계층모델하나를 바꾼다면 전체를 바꾸는게 아니라 그 계층만 바꾸는 것.
물리계층에서 순차적인 전달 과정을 거쳐서 응용계층으로 올라간다. 반대도 마찬가지.

<1>최하단 물리계층 - 데이터링크계층 - 네트워크계층 - 전송계층 - 응용계층(3개) 최상단

	1) 물리계층 (랜선, 랜카드)
	네트웤에서 호스트들이 데이터를 전송하려면 반드시 전송 매체로 연결되야.. -> 호스트를 전송매체 연결위한 인터페이스 규칙과 전송매체 특성을 다룸.
	2) 데이터 링크 계층( 맥어드레스)
	물리계층에서 데이터 전송시 잡음이나 이런 물리적 오류가 생길수 있으니, 그걸 감지하게 해준다. 오류제어로 재전송 요청!
	3) 네트워크 계층(ip 어드레스)
	송수신 호스트의 데이터가 안전하게 도착할려면 여러 중개 시스템(라우터)를 거쳐야한다. 여기서 안전하게 선택할 수 있게 해주는 것이 이 계층의 역할임. -> 혼잡제어???
	4) 전송계층 (tcp 어드레스)
	데이터를 전송 받는 최종 주체는 네트워크 프로세스 . 호스트 시스템이아님 안전한 데이터 전송 지원. 연결의 양끝 
	5) 응용계층 (http)
	user - app FTP

	프로토콜/인터페이스
	서로다른 시스템의 동등계층간의 프로토콜 규칙이 존재, 간상하위 계층간의 인터페이스라는 규칙이 존재, 하위계층이 상위계층에게 제공하는 인터페이스를 서비스라 부른다.

	계층구조 설명 들어가기전에 개념 잡기.
	TCP : 연결형 서비스를 지원하는 전송계층에 위치한 핵심 프로토콜 // 연결 후 통신
	IP : 네트워크 계층에 위치한 인터넷 프로토콜
	FTP(내가볼땐 응용계층 인듯..) : 파일 전송 프로토콜이라함 TCP/IP프로토콜을 가지고 서버와 클라이언트 사이의 파일 전송을 하기 위한 프로토콜
	UDP : 비연결형 서비스를 지원하는 전송계층 프로토콜 - 데이터를 받든지 말든지 상관안함 // 연결 없이 통신..
	이더넷 : 컴퓨터 네트워크 기술 중 하나, LAN에서 가장 많이 활용 되는 기술규격임 고유의 맥 주소를 이용해 상호간 데이터를 주고 받을 수 있게한다. (리피터, 허브 등)
	
<2>인터네트워킹 
	네트워크와 네트워크의 연결.
	라우터라는 중개 장비를 이용해서 네트워크 끼리 연결한다.

	게이트웨이 : 인터네트워킹 기능을 수행하는 시스템.  다른 네트워크로 들어가는 입구 역할을 하는 네트워크 포인트임
	리피터 : 물리계층의 기능 지원 신호를 증폭하여 중개역할을 하는 장치.
	브릿지 : 리피터기능 + 데이터 링크 계층의 기능 추가 한 장치
	라우터 : 브릿지 + 네트워크계층 기능 추가 (경로 결정)을 하는 장치.

	규격화 된 데이터 단위 모델
	응용 계층 : 메시지라고 함. 
	전송 계층 : 일단 보낼 데이터 분해 Fragmentation 하고 각 쪼갠 데이터(세그먼트)마다 시퀀스 넘버 부여 
	네트워크 계층 : 얘도 패킷이라 부르기도 함.
	데이터링크 계층 : 프레임이라고 함.


<3>네트워크 주소의 표현
	ip 프로토콜은 호스트를 구분하기위해, 데이터링크계층에선 LAN 카드별로 MAC 주소 따로 부여함 TCP 는 별도의 포트주소 할당 관리.
	1) IP주소 
	네트워크의 계층의 기능을 수행하는 IP 프로토콜이 호스트를 구분하기 위하여 사용하는 주소 체계야
	IPv4 : 32비트로 이루어진 주소 : 211.101.155.111 // 2진수로 표현하면 알아먹기 힘들기에.. 8개 비트로 4부분으로 나눔
	IPv6: 128비트로 이루어진 주소체계

	2) 호스트이름 -> 도메인이름(DNS)
	ADD.. 라우팅알고리즘 : PACKIT -> 라우터 -> 빠른곳 전달. // 핑.. 

2강에서 더 추가할것임. 캡슐화 이런거 더추가할것.
전송계층 -> Packit fragmentation -> 네트워크계층 -> 데이터링크계층 -> 물리계층 -> 
라우터 컴퓨터 -> 맥어드레스비교 -> IP비교 -> 아니네? -> 다시 내려감.. -> 
다맞네.. 전송계층 까지감. 그럼 하나가 도착 .. 모두 도착할때 까지 TCP에서 기다림.  다 오면 조합해서 응용계층에게 전달.






