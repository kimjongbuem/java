List 중복저장, 순서대로 인스턴스 저장..... 하는 성격 오케오케 
근데 set???
수학에서의 집합을 의미하는데,... 
중복을 허용하지 않아.. + 순서라는 개념이 없어요..
HashSet<E> : Set<E>을구현하는 클래스 
그럼 동일 인스턴스 조건이 뭐여?
Hash내용중 제일 중요해....
equals 반환값이 기준이여~오버라이딩~ 우리가 근거한 것에의해 기준이야
하나 저장 할때마다 equals 메소드에 의해 계속 비교하면 미쳣음...
그래서 이 계속 비교하는 걸 타파하기위한 hash알고리즘을 이용해서 획기적으로 이용하자
대그룹을 각종 소그룹으로 나눠보자. 넣을 때 해당 해쉬알고리즘을 이용해 정수형 값을 받아서 해당 인덱스부분만 비교.
오브젝트 클래스의 hashCode메소드의 호출결과가 같아야하고 그다음 equals메소드 호출결과가 true라면 동일인스턴스로  생각한다.

각각의 hashSet인스턴스는 hashCode를 호출하여 정수값 반환함 ->

treeSet<E>





//해쉬테이블 //
해쉬테이블은 해쉬함수를 통해(어떠한 key(문자 숫자 등등)를 받아서 알고리즘을 통해 정수형값반환)-> hashCode반환->해당 hashCode 해쉬알고리즘이용 -> 이 해쉬코드는
배열의 인덱스로 사용된다 해당배열은 인덱스마다 list로 이루어진다.
근데.. 한 인덱스만 주로 사용되면 효율이 안좋다.(충돌현상 오짐) 그래서 해쉬알고리즘을 잘 짜야 효율성이 높아진다. (O(1) -> O(n))

박재성.